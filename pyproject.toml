######## Building

### Setuptools

[build-system]
requires = [
    "setuptools",
    "setuptools-scm",
]
build-backend = "setuptools.build_meta"

name = "economicplanning"
authors = [
    {name = "Pablo V. Parellada"},
]
description = "Simple economic planning package using linear programming."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]

[project]
name = "economicplan"
authors = [
    {name = "Pablo V. Parellada"},
]
description = "This is an example python project."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]

dynamic = ["version"]

dependencies = [
    "pydantic==2.0b2",
    "numpy",
    "scipy",
    "pandas",
    "openpyxl",
    "cvxpy",
    "matplotlib",
    "ipykernel"
    ]

[project.optional-dependencies]
dev = [
    "pytest",
    "ruff",
    "black",
    "mkdocs",
    "mkdocstrings",
    "mkdocstrings[python]",
    "mkdocs-material",
    "Pygments",
    "python-markdown-math",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocs-same-dir",
    "mkdocs-autorefs",
    ]

[project.urls]
repository = "https://github.com/pablovegan/Economic-Planning"
documentation = "https://pablovegan.github.io/Economic-Planning"

[tool.setuptools]
platforms = ["unix", "linux", "osx", "cygwin", "win32"]
packages = ["economicplan"]  # optional

[tool.setuptools.dynamic]
version = {attr = "economicplan._version.__version__"}


######## Tools

### Pytest

[tool.pytest.ini_options]
minversion = "7.3"
testpaths = "tests"


### Black

[tool.black]
line-length = 100
skip-string-normalization = false
skip-magic-trailing-comma = false
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | setup.py
)
'''


### MyPy

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
follow_imports = "silent"
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_subclassing_any = true
strict_optional = true
no_implicit_optional = true
warn_no_return = true
warn_unreachable = true
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true


### Ruff

[tool.ruff]
line-length = 100
select = ["F", "E"]
extend-select = ["W", "I002", "B", "UP", "PLE", "PLW", "NPY", "RUF", "PD", "SIM", "PT"]
unfixable = ["NPY002"]
ignore = []
fixable = ["E", "F", "W", "I", "B", "UP", "PLE", "PLW", "NPY", "RUF", "PD", "SIM", "PT"]
extend-exclude = ["tests", "test"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
force-single-line = true
force-sort-within-sections = false
lines-after-imports = 2

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-annotations]
allow-star-arg-any = false
ignore-fully-untyped = false
