[metadata]
name = economicplanning
version = 0.1.0
description = Simple economic planning package using linear programming.
long_description = file: README.md
long_description_content_type = text/markdown
author = Pablo V. Parellada
url = https://github.com/pablovegan/Economic-Planning
license = MIT
license_file = LICENSE
platforms = unix, linux, osx
classifiers =
    License :: OSI Approved
    Programming Language :: Python :: 3
    Topic :: Software Development
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: Unix
    Operating System :: MacOS

[options]
packages = economicplanning
install_requires =
    numpy
    scipy
    pandas
    cvxpy
python_requires = >=3.7
package_dir =
    =.
zip_safe = no

[options.extras_require]
testing =
    pytest
    codecov
    pytest-cov
    pre-commit
    tox
    flake8
    mypy
    isort
    black
    pre-commit

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:paths]
source = economicplanning/*

[coverage:html]
directory = reports

[coverage:run]
branch = True
parallel = True
omit =
    setup.py
    economicplanning/__init__.py
    economicplanning/_version.py

[isort]
sections =
    FUTURE,
    STDLIB,
    THIRDPARTY,
    FIRSTPARTY,
    LOCALFOLDER
default_section = LOCALFOLDER
known_third_party =
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy,
    cvxpy
multi_line_output = 3
lines_after_imports = 2
force_single_line = True
use_parentheses = True
ensure_newline_before_comments = True
line_length = 80


[flake8]
exclude = .git,__pycache__,docs,old,build,dist
max-complexity = 30
max-line-length = 100
# ignore=W504,F401,E402,E266,E203,W503,C408,C416,B001


[mypy]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
follow_imports = silent
check_untyped_defs = false
disallow_incomplete_defs = true
disallow_untyped_defs = false
disallow_subclassing_any = false
strict_optional = false
no_implicit_optional = false
warn_no_return = true
warn_unreachable = true


[pylint.config]
[MASTER]

extension-pkg-whitelist=
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy

[MESSAGES CONTROL]

disable=R,C
enable=E,W
jobs=1
confidence=HIGH

[FORMAT]

max-line-length = 100
max-module-lines = 2000